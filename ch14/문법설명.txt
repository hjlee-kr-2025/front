변수 : 변경되는 데이터를 저장하는 곳

변수는 선언해야 사용할 수 있습니다.

var 변수이름;
let 변수이름;

1. 변수이름은 유일한 이름으로 사용한다.
2. 변수이름만 봐도 어떤역할을 할것이라고 생각되는 이름으로 정한다.

자료형

기본유형
--- 숫자형 : 숫자만쓴다. 소수점도 허용
--- 문자형 : "", '' 큰따옴표나 작은따옴표 안에 데이터를 적는다.
--- 논리형 : true, false (소문자로만 사용해야 한다.)
복합유형
--- 배열 : ['봄', '여름', '가을', '겨울']
--- 객체 : 
특수유형
--- undefined : 변수를 선언하지 않았을때
--- null : 값 자체가 없을때

(((연산자)))
[[[ 산술연산자 ]]]
+ : 더하기
  result = num1 + num2; // num1과 num2의 값을 더해서 result에 저장한다.
- : 빼기
* : 곱하기
/ : 나누기
% : 나머지
  result = num1 % num2;
++ : 1증가
  num1++;   // num1값을 1증가해서 num1에 저장한다.
-- : 1감소
  num1--;   // num1값을 1감소해서 num1에 저장한다.

[[[ 할당연산자 ]]]
= : 오른쪽 값을 왼쪽변수에 할당(저장)합니다.
+= :  y += x;   =>  y = y + x;
-= :  y -= x;   =>  y = y - x;
*= :  y *= x;   =>  y = y * x;
/= :  y /= x;   =>  y = y / x;
%= :  y %= x;   =>  y = y % x;

[[[ 비교연산자 ]]] P479 표14-4
== : 값이 같은 때, 자료형이 다르더라도 값이 같으면 같다고 알려줌
  예)   3 == '3'
=== : 값도 같고, 자료형도 같을때만 같다고 알려줌 (true)
  예)   3 === (4-1) -> true,      3 === '3' -> false
!= : 값이 다른때 -> true
  예)   3 != 4    -> true
!== : 값이 다르거나 자료형이 다를때 ture 반환
  예)   3 !== '3'  -> true
< : 작다
<= : 작거나 같다
> : 크다
>= : 크거나 같다.

[[[ 논리연산자 ]]]
||  : OR연산자
  예)   A || B   => A가 참이거나 B가 참이면 참을 돌려준다.
&&  : AND연산자
  예)   A && B   => A가 참이고 B도 참이면 참을 돌려준다.
!   : NOT연산자
  예)   !A    => A가 참이 아닐때 참을 돌려준다.
