프런트엔드 개발 - 웹개발에서 화면에 보여지는 부분을 개발하는 것
HTML, CSS, Javascript

** HTML 기본구조
<!DOCTYPE html> <!-- HTML5문서임을 알려주는 부분, html의 가장 첫부분에 들어갑니다. -->
<html> <!-- html문서의 시작을 알리는 태그 - html태그의 시작 -->
<!-- 이곳에 프런트엔드 개발의 모든내용이 들어갑니다 -->
  <head> <!-- 서버가 이 웹문서를 해석하는데 필요한 내용, 정보 -->
    <meta charset="utf-8"> <!-- 한글을 보여주기위해 설정 -->
    <title>탭제목</title>
    <link rel="stylesheet" href="css파일경로+이름"> <!-- 외부 css파일을 불러오는 태그 -->
    <style>
    /* 스타일태그안의 주석 */
    /* 내부 css를 구현하는 부분 */
    </style>
    <!-- head태그안에 사용하는 태그중 meta, link는 종료태그가 없다 -->
  </head>
  <body> <!-- 웹브라우저에 보이는 내용을 작성하는 곳 -->
  </body>
</html> <!-- html문서의 끝을 알리는 태그 - html태그의 종료 -->


블럭레벨요소를 가진 태그
- 웹브라우저의 한줄을 차지한다.
<div>, <p>, <h1>~<h6>, <table>
<header>, <nav>, <section>, <main>, <aside>, <footer> ->  시맨틱태그(div와 동일)

글자(폰트) 스타일
<strong>, <b> : 굵게
<em>, <i> : 기울임체
<ins>, <u> : 밑줄글씨
<del>, <s> : 삭제글씨 (글씨중앙에 가로줄)

테이블에 관련된 태그 - <table>, <caption>, <tr>, <th>, <td>
<!-- 2x2테이블 기본구조 -->
<table>
  <caption>테이블제목</caption>
  <tr>
    <th>1행 1열</th> <th>1행 2열</th>
  </tr>
  <tr>
    <td>2행 1열</td> <td>2행 2열</td>
  </tr>
</table>

텍스트외의 컨텐츠
<img src="이미지화일경로+이름" alt="대체텍스트(이미지못불러왔을때)"> : 이미지를 화면에 표현할때사용, 종료태그없음
<audio src="음원파일경로+이름" controls></audio> : 웹브라우저에서 소리를 들려주고 싶을때 사용하는 태그
<video src="비디오파일경로+이름" controls></video> : 비디오 표시

웹페이지 이동을 위한 태그
<a href="이동할 페이지 주소">페이지이름 또는 내용</a>

리스트 - <ol>, <ul>, <li>
<ol> : 순서있는 리스트 (숫자, 소문자, 대문자, 로마소문자, 로마대문자중 하나를 선택해서 사용할 수 있습니다.)
구조: 
<ol>
  <li> 첫번째 리스트 </li>
  <li> 두번째 리스트 </li>
  <li> 세번째 리스트 </li>
  ...
</ol>
<ul> : 순서가 없는 리스트 (리스트 앞에 블릿이 붙는다.)
      구조는 ol 태그와 동일하다

화면에 그룹으로 묶어주는 태그
<fieldset> - 네모박스로 그룹화 시켜주는 태그
<legend> - 네모박스에 제목을 보여주는 태그

사용자입력을 받는것 / 서버로 보내는 데이터 수집
<form>태그
<input> : 사용자의 입력을 받는 대표적인 태그, type속성을 지정해서 다양하게 사용합니다. 종료태그없음.
- 한 줄 텍스트 입력을 받는다.
  type: text, password(텍스트가 블릿형태로 나타남), email(이메일 형식 체크)
- 날짜, 시간
  type: date, time
- 선택
  type: check-box(여러개선택), radio(여러개중 하나선택)
- 버튼
  type: submit(데이터를 서버에 전송), button(일반버튼), reset(폼태그 내용 초기화)
<textarea> : 여러줄의 입력을 받을 때 사용하는 태그
  사용예) <textarea rows='4' cols="60"></textarea>
        => 여러줄을 입력할 수 있는 창을 만드는데 가로 60글자, 세로4줄 크기로 만들어 달라는 의미.
<button> : 버튼을 만들어주는 태그
  사용예) <button type="submit">버튼이름</button>
  type: submit, button, reset (input태그에 설명한 내용과 같다.)
<select>, <option> : 드랍다운 메뉴를 만들어주는 태그
  사용예)
  <select>
    <option>메뉴1</option>
    <option>메뉴2</option>
    ...
  </select>
==== 입력창에 이름을 달아주는 태그
  : <label>입력창이름</label>

CSS (Cascading Style Sheet) - HTML의 내용을 꾸며준다.
** 작성방법과 우선순위
1. 태그안에 style속성으로 작성한다.
  예) <div style="border:1px solid #222;">박스입니다</div>
  - 여러개를 적용시킬때는 css속성을 ;으로 구분해서 작성합니다.
2. 내부스타일 사용 - <style>이곳에 구현</style> - <style>태그안에 작성
  예)
  <head>
    ....
    <style>
    div {
      border: 1px solid #222;
    }
    </style>
  </head>
3. 외부파일에 스타일을 작성하고 html문서에서 불러와서 사용한다. - 외부스타일
  예)
  style.css 파일 - 태그<> 없이 css내용만 작성한다.
  div {
    border: 1px solid #222;
  }

  html문서에서
  <head>
    ...
    <title></title>
    <link rel='stylesheet' href='style.css'> <!-- css파일을 불러오는 부분 */
  </head>
4. 브라우저의 기본 스타일의 적용을 받습니다.

CSS 기본구조
선택자 {
  스타일속성: 값;
  스타일속성: 값; ...
}
CSS에서 가장 중요한 것 : 선택자 - 어떤것의 스타일을 변경할 것인가?
1. id선택자 -> id값앞에 #을 붙여서 사용합니다. 중복으로 스타일이 적용되지 않습니다. 같은id값을 가진것이 여러 개가 있으면 제일 처음것만 적용이 됩니다. (주의사항: 유일성을 생각해야 합니다.)
  사용예)
  <div id="container">
    ....
  </div>

  =>
  <style>
    #container {
      border: 1px solid #222;
      background: white;
    }
  </style>
2. class 선택자 -> class값 앞에 .을 붙여서 사용합니다. 같은 클래스이름을 가진 것들이 동시에 스타일이 적용됩니다.
  사용예)
  <div id="container">
    <div class="box"></div>
    <div class="box"></div>
    <div class="box"></div>
  </div>

  =>
  <style>
    .box {
      border: 1px dotted red;
    }
  </style>
3. 타입선택자(태그선택자) - 태그이름을 선택자로 사용 - 중복적용이 됩니다.
  사용예)
  <div id="container">
    <div class="box"></div>
    <div class="box"></div>
    <div class="box"></div>
    <div class="box"></div>
  </div>

  =>
  <style>
    div {
      border: 1px solid #222;
    }
  </style>
4. 전체 선택자 : * -> 모든요소가 적용됩니다.
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

** 하위선택자
  표현방법)  상위선택자 하위선택자 {} : 상위선택자와 하위선택자 사이에 공백을 둡니다.
  사용예)
      <div>
        <h1></h1> <!-- 이곳이 스타일이 적용됩니다 -->
        <section>
          <h1></h1> <!-- 이곳이 스타일이 적용됩니다 -->
          <p></p>
        </section>
      </div>

      =>
      /* div태그 아래에 있는 h1 태그 모두 스타일 적용 */
      div h1 {
        border: 1px solid #222;
      }
        
** 자식선택자
  표현방법) 상위(부모)선택자 > 자녀선택자 {} - 부모선택자와 자녀선택자 사이에 > 기호를 적는다.
  사용예)
      <div>
        <h1></h1> <!-- 이곳이 스타일이 적용됩니다 -->
        <section>
          <h1></h1> <!-- 이곳은 스타일이 적용되지 않습니다. -->
          <p></p>
        </section>
        <h1></h1> <!-- 이곳은 스타일이 적용됩니다 -->
      </div>

      =>
      /* div태그 바로 아래에 있는 h1 태그만 스타일 적용 */
      div > h1 {
        border: 1px solid #222;
      }

** 인접형제 선택자 : 두선택자 사이에 + 로 표현
  사용예)
  <div id="container">
    <h1></h1>
    <div></div> <!-- 이곳만 스타일이 적용됩니다 -->
    <div></div>
    <div></div>
  </div>
  =>
  h1 + div {
    border: 1px solid #222;
  }
**  형제선택자 : 선택자 사이에 ~ 로 표현
  사용예)
  <div id="container"> <!-- 이곳은 스타일이 적용되지 않습니다. -->
    <h1></h1>
    <div></div> <!-- 이곳은 스타일이 적용됩니다 -->
    <div></div> <!-- 이곳은 스타일이 적용됩니다 -->
    <div></div> <!-- 이곳은 스타일이 적용됩니다 -->
  </div>
  =>
  h1 ~ div {
    border: 1px solid #222;
  }

==== 글꼴에 관련된 속성 ====
font-family : 폰트(글꼴)을 지정할때 사용합니다.
  사용예) font-family: '맑은 고딕', 돋움, 굴림; /* 가장앞에 있는것부터 적용, 없을때 또는 못찾을때 다음폰트를 사용, 두단어로 이루어진 폰트이름은 '' 또는 "" 로 묶어서 지정합니다. */
font-size : 폰트크기 (단위: px, em, %, pt, ...)
font-style(기울임체), font-weight(굵기), font-decoration(밑줄글씨, 삭제글씨)
웹폰트 : 사용자가 가지고 있는 폰트를 사용하는 것이 아니고, 개발자의 의도대로 폰트를 표현하고 싶을때 웹에서 폰트를 다운받아 적용할 수 있도록 하는 방법
/* 웹폰트설정 */
@font-face {
  font-family: 폰트이름설정;
  src: local(사용자PC에 설치되어있는 폰트),
      url(웹폰트경로1), url(웹폰트경로2), ...;
}

/* 웹폰트 사용*/
  선택자 {
    font-family: 위에서 설정한 폰트이름;
  }

==== 색상표현방법 ==== : 글자색, 배경색, 테두리색
1. 16진수표현: #000(3자리, RGB가 각각 1자리), #000000(6자리, RGB가 각각 2자리)
2. rgb를 사용: rgb(R, G, B) => 0~255까지의 숫자를 설정할수 있습니다.
3. rgba를 사용: rgab(R, B, B, A) => RGB+ 투명도(A, 0.0~1.0)
4. 색이름을 적어준다(CSS3에서는 140개의 색이름이 있다.)
  - 사용예: white, red, blue, green, black, ....
글자색지정 : color
배경색지정 : background-color
테두리색지정 : border-color
    <style>
      div {
        color: white;
        background-color: black;
        border: 1px solid red;
      }

*** 텍스트 꾸미는 것과 관련된 스타일속성
- text-align : 텍스트의 가로 정렬 (p214)
   들어가는 값 ==> left(왼쪽), right(오른쪽), center(중앙), justify(양쪽쪽)
- line-height : 줄간격을 조절합니다. (폰트size를 기준으로 생각하면 됩니다. 폰트size와 값이 같다면 0) (p215-216)
  예) font-size: 16px; line-height: 16px|1.0|100%; /* 줄간격 0 */
- text-shadow : 글씨에 그림자 효과를 줍니다.
  예) text-shadow: 5px 5px 3px black;
          /* 가로(오른쪽), 세로(아래), 번짐정도, 그림자색상 */
- text-transform : 텍스트의 대소문자변경 (p220)
  -> capitalize(첫글자를 대문자로), uppercase(대문자로), lowercase(소문자로)
- letter-spacing : 글자간격조절(자간)
  -> 지정하는 값이 양쪽으로 적용

리스트 스타일 적용하는 CSS
- list-style-type : 블릿모양이나 숫자,문자지정 (p222)
  블릿은 3가지 (disc, circle, square)
  순서있는 모양은 5가지
- list-style-image : 블릿을 이미지로 할 때 사용합니다.
  예) list-style-image: url('이미지경로'); 
- list-style-position : 들여쓰기를 할때 사용할 수 있습니다.

표 스타일을 적용하는 CSS
- caption-side : 제목의 위치 (위, 아래)를 설정하는 속성
    => top | bottom
- border : 표 테두리를 만들어 줍니다.
- border-collapse : collapse; /* table과 셀의 테두리를 합친다 */
- border-spacing: 수평거리, 수직거리; /* 셀 사이의 여백을 지정 */

=========  여기까지 책의 7장 입니다 =========

레이아웃 : 내용(컨텐츠)을 배치하치하는 것
보통은 box단위로 이루어지게 됩니다.
한줄을 다 차치하는 태그를 '블록 레벨 요소'라고 합니다.
한줄안에 여러개를 사용할 수 있는 것을 '인라인 레벨 요소'라고 합니다.

기본적인 박스 구성 (p240 그림 8-3)
margin(외부여백) (border:테두리) padding(내부여백) 콘텐츠(텍스트, 이미지, 비디오등..)

박스의 크기를 설정하는 속성
width : 폭;
height : 높이;
box-sizing : content-box|border-box;

- box-shadow : 박스에 그림자 설정
  사용예) box-shadow: 5px 5px 15px 5px blue;
        /* 가로(오른쪽), 세로(아래), 흐림정도, 번짐정도, 그림자색상 */

- border-style : 테두리선의 스타일을 지정해줍니다. (P249 표8-4)
   => solid(직선), dotted(점선), dashed(짧은실선), double(이중선)

- border-width : 테두리선 두께 (4방향을 모두 다르게 설정도 가능)
  4방향 사용예) border-width: 1px 2px 3px 4px;
                    /* 위, 오른쪽, 아래, 왼쪽 순으로 시계방향으로 돌면서 값을 세팅합니다. */
- border-color : 테두선선 색상 (4방향 모두 다르게 설정 가능)

- border : 테두리선두께, 스타일, 색상을 한번에 지정하는 속성
  사용예) border: 1px solid #222; /* 설정순서는 관계없음 */

- border-radius : 테두리의 모서리를 둥글게 처리해준다.
  => 원형으로 만들때 많이 사용합니다.
  박스가 정사각형일때 border-radius: 50%; 로 설정하면 원형이 됩니다.

- margin (외부여백), padding (내부여백) 도 4방향을 다르게 설정이 가능합니다. 사용방법은 border-width처럼 위부터 시계방향으로 설정됩니다.

***** margin에서 위아래 여백은 큰것으로 중첩됩니다.

- display : block | inline | inline-block | none;
- float : left | right;
- clear : left | right | both;

위치를 지정하는
left, right, top, bottom
position: static | relative(상대좌표) | absolute | fixed(브라우저전체에서 절대값좌표);

*** 배경 ***
- background-color : 배경색지정
- background-clip: border-box | padding-box | content-box;
- background-image: url("이미지경로"); /* 배경을 이미지로 설정 */
- background-repeat: repeat | repeat-x | repeat-y | no-repeat;
- background-position: 수평 수직; /* 이미지 위치를 지정합니다.*/

그라데이션
- 선형 linear-gradient(방향, 시작점색상, 종점색상)
- 원형 radius-gradient(모양과시작점-원중심위치, 시작점색상 , 종점색상)


